DIVIDEND EQU 65535
DIVISOR EQU 2

CSEG AT 0
ACALL DIV_16BIT
SJMP $

DIV_16BIT:
;DIVIDEND INITIALLY IN R0,R1

MOV R0,#DIVIDEND>>8	;MSB
MOV R1,#DIVIDEND	;LSB

;DIVISOR INITALLY IN R2 R3
MOV R2,#DIVISOR>>8	;MSB
MOV R3,#DIVISOR		;LSB

;COPY OF DIVIDEND IN 30H,31H
MOV 30H,R0	;MSB
MOV 31H,R1	;LSB

;COPY OF DIVISOR IN 32H,33H
MOV 32H,R2	;MSB
MOV 33H,R3	;LSB

UPDATE_REMAINDER:
MOV R6,30H	;UPDATE REMAINDER MSB
MOV R7,31H	;UPDATE REMAINDER LSB

;DIVIDEND_DIVISOR ,SUB_16BIT
MOV A,31H
SUBB A,33H	;DIVIDEND LSB_DIVISOR LSB
MOV 31H,A	;UPDATE REMAINDER LSB

MOV A,30H
SUBB A,32H	;DIVIDEND MSB_DIVISOR MSB
MOV 30H,A	;UPDATE REMAINDER MSB
JC EXIT_DIV

;UPDATE QUOTIENT,INC_16BIT
MOV A,R5
ADD A,#1
MOV R5,A	;UPDATE QUOTIENT LSB
CLR A
ADDC A,R4
MOV R4,A	;UPDATE QUORIENT MSB
SJMP UPDATE_REMAINDER
EXIT_DIV:
RET
END
